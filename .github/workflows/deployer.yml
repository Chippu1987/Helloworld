name: Deploy Cloud Functions
on:
  push:
    branches:
      - main

permissions:
  contents: 'read'
  id-token: write

jobs:
  GithubAction-Cloud_Function-Deployment:
    runs-on: ubuntu-latest
    steps:
    - id: 'auth'
      name: 'Authenticate to GCP'
      uses: 'google-github-actions/auth@v0.3.1'
      with:
          create_credentials_file: 'true'
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

    - id: 'gcloud'
      name: 'List the Services Enabled in the Project'
      run: |-
        gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
        gcloud services list --project ${{ secrets.GCP_PROJECT_ID }}

    - id: 'GIT-Checkout'
      name: 'Checkout the Source Code'
      uses: actions/checkout@v2

    - id: 'Install-python-package'
      name : 'Install Packages'
      run : |-
        sudo apt install python3
    
    - id: 'Run-python-test'
      name : 'Run unit test case'
      run : |-
        python3 test.py

    - id: 'deploy'
      name: 'Deploy the Python Source Code to GCP Cloud Fucntion'
      uses: 'google-github-actions/deploy-cloud-functions@v1'
      with:
        name: 'glcoud-wif-cloud-function'
        runtime: 'python312'
        entry_point: hello_world
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - id: 'Set_IAM_Policy_Binding'
      name: 'Set IAM Policy binding to allow unauthenticated user access'
      run: |-
        gcloud functions add-iam-policy-binding glcoud-wif-cloud-function \
        --member="allUsers" \
        --role="roles/cloudfunctions.invoker" \
        --project ${{ secrets.GCP_PROJECT_ID }}
    - id: 'Test_Cloud_Function_Endpoint'
      name: 'Test the Cloud Function endpoint'
      run: |-
        curl https://us-central1-employee-finder-407218.cloudfunctions.net/glcoud-wif-cloud-function